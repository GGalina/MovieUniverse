{"version":3,"file":"static/js/168.392afe50.chunk.js","mappings":"2OACA,EAAuB,sBAAvB,EAAoD,sBAApD,EAAmF,wBAAnF,EAAqH,yB,SCkCrH,EA9BgB,WACZ,IAAOA,GAAMC,EAAAA,EAAAA,MAAND,GACP,GAA4BE,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAc,mCAAG,iGAEXN,EAFW,iCAGQO,EAAAA,EAAAA,GAAgBP,EAAG,YAH3B,OAGLQ,EAHK,OAIXJ,EAAUI,EAAKC,SAJJ,uDAOfC,QAAQC,IAAI,KAAMC,SAPH,yDAAH,qDAUpBN,GACH,GAAE,CAACN,KAGA,eAAIa,UAAWC,EAAf,SACKX,GAAUA,EAAOY,OAAS,EAAIZ,EAAOa,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASlB,EAApB,EAAoBA,GAApB,OACtC,gBAAIa,UAAWC,EAAf,WACI,gBAAID,UAAWC,EAAf,qBAAkCG,MAClC,cAAGJ,UAAWC,EAAd,SAA0BI,MAFFlB,EADU,KAKrC,eAAIa,UAAWC,EAAf,sDAGhB,C,yHC/BDK,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEVb,EAAe,mCAAG,WAAOc,EAASC,GAAhB,uFACGH,EAAAA,EAAAA,IAAA,iBAAoBE,GAApB,OAA8BC,EAA9B,oBAA8CF,IADjD,cACdG,EADc,yBAEbA,EAASf,MAFI,2CAAH,wDAKfgB,EAAS,mCAAG,oGACGL,EAAAA,EAAAA,IAAA,iCAAoCC,IADvC,cACVZ,EADU,yBAETA,EAAKA,MAFI,2CAAH,oD","sources":["webpack://movie-universe/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","components/Services/moviesAPI.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Reviews_list__okdpy\",\"item\":\"Reviews_item__DJKij\",\"author\":\"Reviews_author__CqYAZ\",\"content\":\"Reviews_content__13k0w\"};","import { useEffect, useState } from \"react\";\nimport { MovieDetailsApi } from \"../Services/moviesAPI\";\nimport { useParams } from 'react-router-dom';\nimport s from './Reviews.module.css'\n\nconst Reviews = () => {\n    const {id} = useParams();\n    const [review, setReview] = useState([]);\n\n    useEffect(() => {\n        const reviewsDetails = async () => {\n            try {\n                if (id) {\n                    const data = await MovieDetailsApi(id,'/reviews');\n                    setReview(data.results);\n                }\n            } catch (error) {\n                console.log(error.message);\n            }\n        }\n        reviewsDetails();\n    }, [id]);\n    \n    return (\n        <ul className={s.list}>\n            {review && review.length > 0 ? review.map(({ author, content, id}) => (\n                <li className={s.item} key={id}>\n                    <h2 className={s.author}>Author: {author}</h2>\n                    <p className={s.content}>{content}</p>\n                </li>\n            )) : <h2 className={s.author}>We dont have any reviews for this movie</h2>}\n        </ul>\n    );\n};\n\nexport default Reviews;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'c8cf41cbc51b38c2e1c60ca8bf6e538a';\n\nconst MovieDetailsApi = async (movieId, part) => {\n    const response = await axios.get(`/movie/${movieId}${part}?api_key=${API_KEY}`);\n    return response.data;\n};\n\nconst ImagesApi = async () => {\n  const data = await axios.get(`/configuration?api_key=${API_KEY}`);\n  return data.data;\n};\n\nexport { MovieDetailsApi, ImagesApi };\n\n"],"names":["id","useParams","useState","review","setReview","useEffect","reviewsDetails","MovieDetailsApi","data","results","console","log","message","className","s","length","map","author","content","axios","API_KEY","movieId","part","response","ImagesApi"],"sourceRoot":""}